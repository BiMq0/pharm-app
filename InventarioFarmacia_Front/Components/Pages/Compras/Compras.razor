@page "/compras"
@using InventarioFarmacia_Front.Components.SimpleComponents.Loader
@using InventarioFarmacia_Shared.DTOs.Compras
@inject NavigationManager Navigation
@inject Services.Compras.ICompraService CompraService
@using InventarioFarmacia_Domain.Constants;
@rendermode InteractiveServer

<PageTitle>Compras</PageTitle>
@if (EstadoCargador.IsLoading)
{
    <Cargador />
}
<div class="container-fluid mt-3">
    <div class="row mb-4">
        <div class="col-12">
            <div
                class="bg-primary text-white p-4 rounded-3 shadow d-flex justify-content-between align-items-center flex-wrap">
                <div>
                    <h1 class="fw-bold mb-2"><i class="bi bi-cart-fill"></i> Compras</h1>
                    <p class="opacity-75 mb-0">Explora y revisa el historial de compras realizadas</p>
                </div>
            </div>
        </div>
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <table class="table table-hover table-responsive table-bordered table-striped">
                        <thead>
                            <tr class="align-middle text-center">
                                <th>Id de Pedido</th>
                                <th>Fecha de Inicio de pedido</th>
                                <th>Fecha de Recepción Esperada</th>
                                <th>Estado</th>
                                <th>Acciones</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var compra in lstRegistroCompras)
                            {
                                var color = compra.Estado switch
                                {
                                    Estados_OrdenDeCompra.RECIBIDO => Colores_EstadosCompra.RECIBIDO,
                                    Estados_OrdenDeCompra.PENDIENTE => Colores_EstadosCompra.PENDIENTE,
                                    Estados_OrdenDeCompra.CANCELADO => Colores_EstadosCompra.CANCELADO
                                };
                                var valorEstado = compra.Estado switch
                                {
                                    Estados_OrdenDeCompra.RECIBIDO => "Completado",
                                    Estados_OrdenDeCompra.PENDIENTE => "Pendiente",
                                    Estados_OrdenDeCompra.CANCELADO => "Cancelado",
                                    _ => "Desconocido"
                                };
                                <tr class="align-middle text-center">
                                    <td>@compra.Id</td>
                                    <td>@compra.Fecha_Pedido.ToString("dd/MM/yyyy")</td>
                                    <td>@compra.Fecha_Recibo.ToString("dd/MM/yyyy")</td>
                                    <td>
                                        <span class="badge" style="background-color: @color">@valorEstado</span>
                                    </td>
                                    <td>
                                        <button class="btn btn-sm btn-outline-primary"
                                            @onclick="() => NavegarToDetalle(compra.Id)">
                                            Ver Detalles
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <NavLink href="/compras/nuevaCompra" class="btn btn-primary position-fixed"
            style="bottom: 20px; right: 20px; border-radius: 50%; width: 60px; height: 60px; display: flex; align-items: center; justify-content: center; font-size: 24px;">
            <i class="bi bi-plus-lg"></i>
        </NavLink>
    </div>
</div>
@code {
    private IEnumerable<CompraRegistroDTO> lstRegistroCompras = new List<CompraRegistroDTO>();
    protected override async Task OnInitializedAsync()
    {
        try
        {
            EstadoCargador.Activar();
            lstRegistroCompras = await CompraService.GetAllCompras();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error al cargar las compras: {ex.Message}");
        }
        finally
        {
            EstadoCargador.Desactivar();
            StateHasChanged();
        }
    }
    private void NavegarToDetalle(int idCompra)
    {
        Navigation.NavigateTo($"/compras/{idCompra}");
    }
}