@page "/compras/{id:int}"
@using InventarioFarmacia_Shared.DTOs.Compras
@using InventarioFarmacia_Shared.DTOs.Lotes
@using InventarioFarmacia_Domain.Constants
@using InventarioFarmacia_Front.Components.SimpleComponents.Loader
@inject Services.Compras.ICompraService CompraService
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>Detalles de Compra</PageTitle>

@if (isLoading)
{
    <Cargador />
}
// else if (compra != null)
else if (true)
{
    <div class="container-fluid mt-3">
        <div class="row mb-4">
            <div class="col-12">
                <div class="bg-primary text-white p-4 rounded-3 shadow">
                    <div class="d-flex justify-content-between align-items-center flex-wrap">
                        <div>
                            <h1 class="fw-bold mb-2">
                                <i class="bi bi-receipt"></i>
                                @* Orden de Compra #@compra.Id *@
                            </h1>
                            <p class="opacity-75 mb-0">Detalles completos de la orden de compra</p>
                        </div>
                        <div class="text-end">
                            @* <span class="badge @GetEstadoBadgeClass(compra.Estado) fs-6 px-3 py-2"
                                style="@GetEstadoBadgeStyle(compra.Estado)">
                                @compra.Estado.ToString()
                            </span> *@
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Información general de la compra -->
        <div class="row mb-4">
            <div class="col-md-3">
                <div class="card border-0 shadow-sm">
                    <div class="card-body text-center">
                        <i class="bi bi-calendar-event text-primary fs-1"></i>
                        <h6 class="text-muted mb-1">Fecha de Pedido</h6>
                        @* <h5 class="fw-bold">@compra.Fecha_Pedido.ToShortDateString()</h5> *@
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card border-0 shadow-sm">
                    <div class="card-body text-center">
                        <i class="bi bi-calendar-check text-success fs-1"></i>
                        <h6 class="text-muted mb-1">Fecha de Recibo</h6>
                        @* <h5 class="fw-bold">@compra.Fecha_Recibo.ToShortDateString()</h5> *@
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card border-0 shadow-sm">
                    <div class="card-body text-center">
                        <i class="bi bi-box-seam text-info fs-1"></i>
                        <h6 class="text-muted mb-1">Cantidad Total de Productos</h6>
                        @* <h5 class="fw-bold">@compra.Cantidad_Productos</h5> *@
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card border-0 shadow-sm">
                    <div class="card-body text-center">
                        <i class="bi bi-currency-dollar text-warning fs-1"></i>
                        <h6 class="text-muted mb-1">Costo Total</h6>
                        @* <h5 class="fw-bold">Bs. @compra.Costo_Total.ToString("N2")</h5> *@
                    </div>
                </div>
            </div>
        </div>

        <!-- Lista de productos con lotes -->
        <div class="row">
            <div class="col-12">
                <div class="card border-0 shadow-sm">
                    <div class="card-header bg-light">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-list-ul"></i>
                            Productos y Lotes Incluidos
                        </h5>
                    </div>
                    <div class="card-body">
                        @* @if (compra.LotesInvolucrados != null && compra.LotesInvolucrados.Any())
                        {
                            @foreach (var grupo in productosAgrupados)
                            {
                                <div class="accordion mb-3" id="accordion-@grupo.Key">
                                    <div class="accordion-item border rounded shadow-sm">
                                        <h2 class="accordion-header">
                                            <button class="accordion-button collapsed bg-light" type="button"
                                                data-bs-toggle="collapse" data-bs-target="#collapse-@grupo.Key"
                                                aria-expanded="false" aria-controls="collapse-@grupo.Key">
                                                <div class="d-flex w-100 justify-content-between align-items-center me-3">
                                                    <div>
                                                        <h6 class="mb-1 fw-bold text-primary">@grupo.Value.NombreProducto</h6>
                                                        <small class="text-muted">@grupo.Value.NombreClinico</small>
                                                    </div>
                                                    <div class="text-end">
                                                        <span class="badge bg-primary fs-6">
                                                            @grupo.Value.CantidadTotal unidades
                                                        </span>
                                                    </div>
                                                </div>
                                            </button>
                                        </h2>
                                        <div id="collapse-@grupo.Key" class="accordion-collapse collapse"
                                            data-bs-parent="#accordion-@grupo.Key">
                                            <div class="accordion-body">
                                                <div class="table-responsive">
                                                    <table class="table table-sm table-hover">
                                                        <thead class="table-light">
                                                            <tr>
                                                                <th>Número de Lote</th>
                                                                <th>Fecha de Vencimiento</th>
                                                                <th class="text-center">Cantidad Solicitada</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            @foreach (var lote in grupo.Value.Lotes)
                                                            {
                                                                <tr>
                                                                    <td>
                                                                        <span class="fw-semibold">@lote.Nro_Lote</span>
                                                                    </td>
                                                                    <td>
                                                                        <span class="badge bg-secondary">
                                                                            @lote.Fecha_Vencimiento.ToShortDateString()
                                                                        </span>
                                                                    </td>
                                                                    <td class="text-center">
                                                                        <span class="badge bg-success">
                                                                            @lote.CantidadSolicitada unidades
                                                                        </span>
                                                                    </td>
                                                                </tr>
                                                            }
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="text-center py-4">
                                <i class="bi bi-inbox text-muted fs-1"></i>
                                <p class="text-muted mt-2">No hay productos en esta orden de compra</p>
                            </div>
                        } *@
                    </div>
                </div>
            </div>
        </div>

        <!-- Botón de regreso -->
        <div class="row mt-4">
            <div class="col-12 text-center">
                <button class="btn btn-outline-primary" @onclick="VolverACompras">
                    <i class="bi bi-arrow-left"></i> Volver a Compras
                </button>
            </div>
        </div>
    </div>
}
else
{
    <div class="container-fluid mt-3">
        <div class="alert alert-warning">
            <i class="bi bi-exclamation-triangle"></i>
            No se pudo cargar la información de la orden de compra.
        </div>
        <button class="btn btn-primary" @onclick="VolverACompras">
            <i class="bi bi-arrow-left"></i> Volver a Compras
        </button>
    </div>
}

@code {
    [Parameter] public int Id { get; set; }

    //private CompraDetalladaDTO? compra;
    private bool isLoading = true;
    private Dictionary<int, ProductoAgrupado> productosAgrupados = new();

    protected override async Task OnInitializedAsync()
    {
        await CargarCompra();
    }

    private async Task CargarCompra()
    {
        isLoading = true;
        try
        {
            await Task.Delay(500);
            //compra = await CompraService.GetCompraById(Id);

            @* if (compra != null)
            {
                AgruparProductosPorTipo();
            } *@
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error al cargar la compra: {ex.Message}");
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private void AgruparProductosPorTipo()
    {
        //if (compra?.LotesInvolucrados == null) return;
    }

    private string GetEstadoBadgeClass(Estados_OrdenDeCompra estado)
    {
        var color = estado switch
        {
            Estados_OrdenDeCompra.RECIBIDO => Colores_EstadosCompra.RECIBIDO,
            Estados_OrdenDeCompra.PENDIENTE => Colores_EstadosCompra.PENDIENTE,
            Estados_OrdenDeCompra.CANCELADO => Colores_EstadosCompra.CANCELADO,
            _ => "#6c757d"
        };

        return $"text-white";
    }

    private string GetEstadoBadgeStyle(Estados_OrdenDeCompra estado)
    {
        var color = estado switch
        {
            Estados_OrdenDeCompra.RECIBIDO => Colores_EstadosCompra.RECIBIDO,
            Estados_OrdenDeCompra.PENDIENTE => Colores_EstadosCompra.PENDIENTE,
            Estados_OrdenDeCompra.CANCELADO => Colores_EstadosCompra.CANCELADO,
            _ => "#6c757d"
        };

        return $"background-color: {color}";
    }

    private void VolverACompras()
    {
        Navigation.NavigateTo("/compras");
    }

    private class ProductoAgrupado
    {
        public int IdProducto { get; set; }
        public string NombreProducto { get; set; } = string.Empty;
        public string NombreClinico { get; set; } = string.Empty;
        public int CantidadTotal { get; set; }
        public List<LoteDetalle> Lotes { get; set; } = new();
    }

    private class LoteDetalle
    {
        public string Nro_Lote { get; set; } = string.Empty;
        public DateOnly Fecha_Vencimiento { get; set; }
        public int CantidadSolicitada { get; set; }
    }
}