@page "/productos"
@using InventarioFarmacia_Front.Components.SimpleComponents.CardItems;
@using InventarioFarmacia_Shared.DTOs.Products;
@using InventarioFarmacia_Front.Components.SimpleComponents.Loader;
@inject Services.Products.IProductoService ProductServices
@rendermode InteractiveServer

<PageTitle>Productos</PageTitle>

@if(isLoading)
{
    <Cargador/>
}

<div class="container-fluid mt-3">
    <div class="row mb-4">
        <div class="col-12">
            <div class="bg-primary text-white p-4 rounded-3 shadow">
                <h1 class="fw-bold mb-2"><i class="bi bi-box-fill"></i> Productos</h1>
                <p class="opacity-75 mb-0">Explora y administra los productos de farmacia</p>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <div class="d-flex flex-wrap justify-content-center gap-3 p-3">
                @foreach (var producto in productos)
                {
                    <ProductCardItem Id="@producto.Id" Nombre="@producto.Nombre" Precio_Unitario="@producto.Precio_Unitario" Precio_Caja="@producto.Precio_Caja" StockTotal="@producto.StockTotal" Ruta_Imagen="@producto.Ruta_Imagen"/>
                }
            </div>
        </div>
    </div>
    <NavLink href="/productos/agregar" class="btn btn-primary position-fixed" style="bottom: 20px; right: 20px; border-radius: 50%; width: 60px; height: 60px; display: flex; align-items: center; justify-content: center; font-size: 24px;">
        <i class="bi bi-plus-lg"></i>
    </NavLink>
</div>



@code {
    private bool isLoading = true;
    protected IEnumerable<ProductoInfoCardDTO> productos = new List<ProductoInfoCardDTO>();
    protected override async Task OnInitializedAsync()
    {
        productos = await ProductServices.GetProductosAsync();
        isLoading = false;
    }

}
