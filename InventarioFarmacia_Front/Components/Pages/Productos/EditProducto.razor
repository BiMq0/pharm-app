@page "/productos/editar/{id:int}"
@using InventarioFarmacia_Front.Services.Products
@using InventarioFarmacia_Shared.DTOs.Products;
@using InventarioFarmacia_Shared.DTOs.Categorias;
@using InventarioFarmacia_Front.Components.SimpleComponents.Modals;
@inject Services.Products.IProductoService ProductServices
@inject Services.Categories.ICategoriaService CategoriaService
@inject IWebHostEnvironment Environment
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>Editar Producto</PageTitle>

<div class="container-fluid mt-3">
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex align-items-center mb-3">
                <div class="card bg-primary p-4 text-white rounded-3 shadow w-100">
                    <h1 class="fw-bold mb-1"><i class="bi bi-box-fill"></i>Editar Producto</h1>
                    <p class="opacity-75 mb-0">Agrega un nuevo producto al inventario de la farmacia</p>
                </div>
            </div>
        </div>
    </div>
    <div class="row w-100">
        <div class="col-lg-12 col-xl-12">
            <div class="card shadow border-0">
                <div class="card-header bg-primary bg-gradient text-white">
                    <h5 class="card-title mb-0 fw-bold"><i class="bi bi-pencil-fill"></i> Informaci√≥n del Producto</h5>
                </div>
                <div class="card-body p-4">
                    <EditForm Model="@ProductoEdicion" OnValidSubmit="EditarProducto" FormName="AgregarProductoForm">
                        <DataAnnotationsValidator />

                        <!-- Informaci√≥n b√°sica -->
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-4">
                                    <label for="nombre" class="form-label fw-semibold">
                                        Nombre del Producto <span class="text-danger">*</span>
                                    </label>
                                    <InputText id="nombre" 
                                               class="form-control form-control-lg" 
                                               @bind-Value="ProductoEdicion.Nombre" 
                                               placeholder="Ej: Paracetamol, Ibuprofeno, etc." />
                                    <ValidationMessage For="@(() => ProductoEdicion.Nombre)" class="text-danger small" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-4">
                                    <label for="nombreClinico" class="form-label fw-semibold">
                                        Nombre Cl√≠nico <span class="text-danger">*</span>
                                    </label>
                                    <InputText id="nombreClinico" 
                                               class="form-control form-control-lg" 
                                               @bind-Value="ProductoEdicion.Nombre_Clinico" 
                                               placeholder="Nombre cient√≠fico o gen√©rico" />
                                    <ValidationMessage For="@(() => ProductoEdicion.Nombre_Clinico)" class="text-danger small" />
                                    <div class="form-text">Nombre cient√≠fico o principio activo</div>
                                </div>
                            </div>
                        </div>

                        <!-- Precios -->
                        <div class="mb-4">
                            <h6 class="fw-bold text-primary border-bottom pb-2 mb-3">üí∞ Informaci√≥n de Precios</h6>
                            <div class="row">
                                <div class="col-md-6">
                                    <label for="precio" class="form-label fw-semibold">
                                        Precio por Unidad <span class="text-danger">*</span>
                                    </label>
                                    <div class="input-group input-group-lg">
                                        <span class="input-group-text">Bs.</span>
                                        <InputNumber id="precio" 
                                                     class="form-control" 
                                                     @bind-Value="ProductoEdicion.Precio_Unitario" 
                                                     placeholder="0.00" />
                                    </div>
                                    <ValidationMessage For="@(() => ProductoEdicion.Precio_Unitario)" class="text-danger small" />
                                </div>
                                <div class="col-md-6">
                                    <label for="precio_Caja" class="form-label fw-semibold">
                                        Precio por Caja
                                    </label>
                                    <div class="input-group input-group-lg">
                                        <span class="input-group-text">Bs.</span>
                                        <InputNumber id="precio_Caja" 
                                                     class="form-control" 
                                                     @bind-Value="ProductoEdicion.Precio_Caja" 
                                                     placeholder="0.00" />
                                    </div>
                                    <ValidationMessage For="@(() => ProductoEdicion.Precio_Caja)" class="text-danger small" />
                                    <div class="form-text">Precio opcional para venta por caja</div>
                                </div>
                            </div>
                        </div>

                        <!-- Informaci√≥n de inventario -->
                        <div class="mb-4">
                            <h6 class="fw-bold text-primary border-bottom pb-2 mb-3">üì¶ Informaci√≥n de Inventario</h6>
                            <div class="row">
                                <div class="col-md-6">
                                    <label for="existencias_por_caja" class="form-label fw-semibold">
                                        Existencias por Caja
                                    </label>
                                    <InputNumber id="existencias_por_caja" 
                                                 class="form-control form-control-lg" 
                                                 @bind-Value="ProductoEdicion.Existencias_Por_Caja" 
                                                 placeholder="Ej: 10, 20, 50..." />
                                    <ValidationMessage For="@(() => ProductoEdicion.Existencias_Por_Caja)" class="text-danger small" />
                                    <div class="form-text">Cantidad de unidades que contiene una caja</div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label fw-semibold">
                                            Configuraci√≥n de Subunidades
                                        </label>
                                        <div class="form-check form-switch">
                                            <InputCheckbox id="tiene_subunidades" 
                                                           class="form-check-input" 
                                                           @bind-Value="ProductoEdicion.Tiene_Subunidades" />
                                            <label class="form-check-label" for="tiene_subunidades">
                                                ¬øTiene Subunidades? <span class="text-muted">(Ej: Pastillas, C√°psulas)</span>
                                            </label>
                                        </div>
                                    </div>
                                    
                                    @if(ProductoEdicion?.Tiene_Subunidades == true)
                                    {
                                        <div class="mt-3">
                                            <label for="subunidades" class="form-label fw-semibold">
                                                Unidades por Existencia <span class="text-danger">*</span>
                                            </label>
                                            <InputNumber id="subunidades" 
                                                         class="form-control form-control-lg" 
                                                         @bind-Value="ProductoEdicion.Unidades_Por_Existencia" 
                                                         placeholder="Ej: 10 pastillas por blister" />
                                            @if (ProductoEdicion?.Unidades_Por_Existencia is null || ProductoEdicion.Unidades_Por_Existencia <= 0)
                                            {
                                                <div class="text-danger small mt-1">Debe ingresar una cantidad v√°lida de subunidades.</div>
                                            }
                                            <div class="form-text">Cantidad de subunidades por presentaci√≥n</div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>


                        <!-- Categor√≠a -->
                        <div class="mb-4">
                            <h6 class="fw-bold text-primary border-bottom pb-2 mb-3">üè∑Ô∏è Categorizaci√≥n</h6>
                            <label for="categoria" class="form-label fw-semibold">
                                Categor√≠a del Producto <span class="text-danger">*</span>
                            </label>
                            <InputSelect id="categoria" 
                                         class="form-select form-select-lg" 
                                         @bind-Value="categoriaSeleccionada" 
                                         @onchange="OnCategoriaChanged">
                                <option value="">Seleccione una categor√≠a</option>
                                @foreach (var categoria in categorias)
                                {
                                    <option value="@categoria.Nombre">@categoria.Nombre</option>
                                }
                            </InputSelect>
                            @if (string.IsNullOrEmpty(categoriaSeleccionada))
                            {
                                <div class="text-danger small mt-1">Debe seleccionar una categor√≠a.</div>
                            }
                            else
                            {
                                <div class="text-success small mt-1">‚úì Categor√≠a seleccionada: @categoriaSeleccionada</div>
                            }
                        </div>

                        <!-- Imagen del producto -->
                        <div class="mb-4">
                            <h6 class="fw-bold text-primary border-bottom pb-2 mb-3">üì∏ Imagen del Producto</h6>
                            <label for="imagen" class="form-label fw-semibold">
                                Imagen del Producto <span class="text-danger">*</span>
                            </label>
                            <InputFile id="imagen" 
                                       class="form-control form-control-lg" 
                                       OnChange="OnImageSelected" 
                                       accept="image/*" />
                            
                            @if (string.IsNullOrEmpty(ProductoEdicion?.Ruta_Imagen))
                            {
                                <div class="text-danger small mt-1">Debe seleccionar una imagen.</div>
                            }
                            
                            @if (!string.IsNullOrEmpty(ProductoEdicion?.Ruta_Imagen))
                            {
                                <div class="text-success small mt-1">‚úì Archivo seleccionado: @System.IO.Path.GetFileName(ProductoEdicion.Ruta_Imagen)</div>
                            }
                            
                            <!-- Vista previa de la imagen -->
                            @if (!string.IsNullOrEmpty(imagePreviewUrl))
                            {
                                <div class="mt-3">
                                    <label class="form-label fw-semibold text-muted">Vista Previa:</label>
                                    <div class="text-center p-3 border rounded bg-light">
                                        <img src="@imagePreviewUrl" 
                                             alt="Vista previa del producto" 
                                             class="img-fluid rounded shadow" 
                                             style="max-width: 250px; max-height: 250px; object-fit: cover;" />
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="mt-3">
                                    <div class="text-center p-4 border rounded bg-light text-muted">
                                        <i class="bi bi-image" style="font-size: 3rem;"></i>
                                        <p class="mb-0 mt-2">Sin imagen seleccionada</p>
                                        <small>Seleccione una imagen para ver la vista previa</small>
                                    </div>
                                </div>
                            }
                            <div class="form-text">Formatos soportados: JPG, PNG, GIF (m√°ximo 5MB)</div>
                        </div>

                        <!-- Botones de acci√≥n -->
                        <div class="d-flex gap-3 justify-content-between mt-5">
                            <button type="button" 
                                    class="btn btn-outline-secondary me-3" 
                                    @onclick="RegresarAProductos">
                                ‚Üê Regresar
                            </button>
                            <div>
                                <button type="button" 
                                        class="btn btn-outline-danger px-4" 
                                        @onclick="LimpiarFormulario">
                                    Limpiar
                                </button>
                                <button type="submit" 
                                        class="btn btn-primary px-4 fw-semibold ms-2">
                                    <i class="bi bi-plus-circle"></i> Crear Producto
                                </button>
                            </div>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>


@* Modal de confirmaci√≥n *@
@if(MostrarModal)
{
    @if (RegistroExitoso)
    {
        <ModalMensaje Titulo="¬°√âxito!" OnAceptar="CerrarModalYRegresar" Exito="true" />
    }
    else
    {
        <ModalMensaje Titulo="Error" OnAceptar="CerrarModal" Exito="false" />
    }
}

@code{
    [SupplyParameterFromForm]
    private ProductoEdicionDTO ProductoEdicion { get; set; } = new();
    [Parameter]
    public int id { get; set; }
    private bool RegistroExitoso { get; set; } = false;
    private bool MostrarModal { get; set; } = false; 
    
    private string imagePreviewUrl = string.Empty;
    private const long MaxFileSize = 5 * 1024 * 1024;
    private IEnumerable<CategoriaToNewProductoDTO> categorias = new List<CategoriaToNewProductoDTO>();

    private string categoriaSeleccionada = string.Empty;
    private int idCategoriaSeleccionada = -1;

    protected override async Task OnInitializedAsync()
    {
        ProductoEdicion = await ProductServices.GetProductoPorIdForEditAsync(id) ;

        
        if (ProductoEdicion.Categoria == null)
        {
            ProductoEdicion.Categoria = new CategoriaToNewProductoDTO();
        }
        categorias = await CategoriaService.GetCategoriasParaNuevoProductoAsync();

        await Task.CompletedTask;
        StateHasChanged(); 
    }

    private void OnCategoriaChanged(ChangeEventArgs e)
    {
        categoriaSeleccionada = e.Value?.ToString() ?? string.Empty;

        if (ProductoEdicion?.Categoria != null)
        {
            ProductoEdicion.Categoria.Nombre = categoriaSeleccionada;
        }
        
        StateHasChanged();
    }

    private async Task OnImageSelected(InputFileChangeEventArgs e)
    {
        var file = e.File;
        if (file != null)
        {
            if (file.Size > MaxFileSize)
            {
                Console.WriteLine("El archivo es demasiado grande. M√°ximo 5MB.");
                return;
            }
            if (!file.ContentType.StartsWith("image/"))
            {
                Console.WriteLine("Solo se permiten archivos de imagen.");
                return;
            }
            try
            {
                var uploadsPath = Path.Combine(Environment.WebRootPath, "uploads", "productos");
                if (!Directory.Exists(uploadsPath))
                {
                    Directory.CreateDirectory(uploadsPath);
                }

                // Generar nombre √∫nico para el archivo
                var fileName = $"{Guid.NewGuid()}_{file.Name}";
                var filePath = Path.Combine(uploadsPath, fileName);

                // Guardar el archivo
                using var stream = file.OpenReadStream(MaxFileSize);
                using var fileStream = new FileStream(filePath, FileMode.Create);
                await stream.CopyToAsync(fileStream);

                ProductoEdicion.Ruta_Imagen = $"/uploads/productos/{fileName}";
                imagePreviewUrl = ProductoEdicion.Ruta_Imagen;

                StateHasChanged();
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error al guardar la imagen: {ex.Message}");
            }
        }
    }

    private async Task EditarProducto()
    {
        try
        {
            if (string.IsNullOrEmpty(categoriaSeleccionada))
            {
                Console.WriteLine("Error: Debe seleccionar una categor√≠a");
                RegistroExitoso = false;
                MostrarModal = true;
                return;
            }

            if (string.IsNullOrEmpty(ProductoEdicion?.Ruta_Imagen))
            {
                Console.WriteLine("Error: Debe seleccionar una imagen");
                RegistroExitoso = false;
                MostrarModal = true;
                return;
            }

            if (ProductoEdicion?.Categoria != null)
            {
                ProductoEdicion.Categoria.Nombre = categoriaSeleccionada;
            }

            // Simular delay para mostrar que es async
            await Task.Delay(100);
            var resultado = await ProductServices.EditarProducto(ProductoEdicion!);
            RegistroExitoso = resultado; 
            MostrarModal = true;
        }
        catch (Exception ex)
        {
            RegistroExitoso = false;
            MostrarModal = true;
            Console.WriteLine($"Error: {ex.Message}");
        }
        
        StateHasChanged();
    }

    private void CerrarModal()
    {
        MostrarModal = false;
        StateHasChanged();
    }

    private void CerrarModalYRegresar()
    {
        MostrarModal = false;
        if (RegistroExitoso)
        {
            LimpiarFormulario();
            Navigation.NavigateTo("/productos");
        }
        StateHasChanged();
    }

    private void RegresarAProductos()
    {
        Navigation.NavigateTo("/productos");
    }

    private void LimpiarFormulario()
    {
        ProductoEdicion = new ();
        ProductoEdicion.Categoria = new ();
        idCategoriaSeleccionada = -1;
        categoriaSeleccionada = string.Empty;
        imagePreviewUrl = string.Empty;
        StateHasChanged();
    }
}
