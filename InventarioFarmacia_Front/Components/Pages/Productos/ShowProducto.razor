@page "/productos/{id:int}"
@using InventarioFarmacia_Shared.DTOs.Products
@inject Services.Products.IProductoService ProductServices

<div class="container-fluid mt-3">
    <div class="row mb-4">
        <div class="card p-0">
            <div class="card-header bg-primary m-0 px-3">
                <h2 class="text-white m-0"><i class="bi bi-box-fill"></i> Detalles del producto</h2>
            </div>
            <div class="d-flex align-items-center card-body bg-light row">
                <div class="input-group input-group-lg">
                    <span class="input-group-text">Nombre de Producto:</span>
                    <input class="form-control" value="@Producto?.Nombre" readonly>
                </div>
                <div class="input-group input-group-lg">
                    <span class="input-group-text">Nombre Clínico del producto:</span>
                    <input class="form-control" value="@Producto?.Nombre_Clinico" readonly>
                </div>
                <div class="input-group input-group-lg">
                    <span class="input-group-text">Existencias por caja:</span>
                    <input class="form-control" value="@Producto?.Existencias_Por_Caja" readonly>
                </div>
                @if (Producto != null)
                {
                    <div class="input-group input-group-lg">
                        <span class="input-group-text">Cuenta con subunidades:</span>
                        <input value='@(Producto.Tiene_Subunidades ? "Si" : "No")' readonly class="form-control">

                    </div>
                    @if (Producto.Tiene_Subunidades)
                    {

                        <div class="input-group input-group-lg">
                            <span class="input-group-text">Cantidad de unidades por existencia:</span>
                            <input class="form-control" value='@Producto.Unidades_Por_Existencia' readonly>
                        </div>
                    }
                }

                <div class="input-group input-group-lg">
                    <span class="input-group-text">Precio por unidad:</span>
                    <span class="input-group-text">Bs:</span>
                    <input class="form-control" value="@Producto?.Precio_Unitario" readonly>
                </div>
                <div class="input-group input-group-lg">
                    <span class="input-group-text">Precio por caja:</span>
                    <span class="input-group-text">Bs:</span>
                    <input class="form-control" value="@Producto?.Precio_Caja" readonly>
                </div>
                <div class="input-group input-group-lg">
                    <span class="input-group-text">Pertenece a la categoria:</span>
                    <input class="form-control" value='@(Producto?.Categoria.Icono + "  " + Producto?.Categoria.Nombre)'
                        readonly>
                </div>
                <div class="input-group input-group-lg">
                    <span class="input-group-text">Imagen:</span>
                    <img class="img-thumbnail form-control" src="@Producto?.Ruta_Imagen">
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int id { get; set; }
    private ProductoDetalladoDTO? Producto { get; set; }
    protected override async Task OnInitializedAsync()
    {
        Producto = await ProductServices.GetProductoPorIdAsync(id);
    }
}
