@using InventarioFarmacia_Front.Services
@using InventarioFarmacia_Shared.DTOs.Products;
@using InventarioFarmacia_Shared.DTOs.Lotes;
@inject Services.Lotes.ILoteService LoteService
@rendermode InteractiveServer

<div class="container-fluid card d-flex mb-3">
    <div class="card-body row g-3">
        <div class="col-5">
            <div class="border rounded p-3 bg-light d-flex">
                <div class="me-3">
                    <img src="@Product!.Ruta_Imagen" class="img-fluid rounded shadow-sm"
                        style="height: 150px; width: 175px; object-fit: cover;" />
                </div>
                <div class="row">
                    <div class="bg-primary text-white rounded p-2 text-center">
                        <h6 class="fw-bold mb-1">@Product.Nombre</h6>
                        <small class="opacity-75">@Product.Nombre_Clinico</small>
                    </div>

                    <div class="row g-2 mt-2">
                        <div class="col-6">
                            <div class="border rounded p-2 text-center bg-white">
                                <div class="fw-bold text-info">Bs. @Product.Precio_Unitario</div>
                                <small class="text-muted">Precio por Unidad:</small>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="border rounded p-2 text-center bg-white">
                                <div class="fw-bold text-success">@Product.Precio_Caja</div>
                                <small class="text-muted">Precio por Caja:</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-5 d-flex justify-content-between">
            <div class="row border rounded py-3 px-2 h-100 d-flex flex-column w-100">
                <div class="d-flex flex-column col-12">
                    <div
                        class="border rounded p-2 d-flex flex-column justify-content-between align-items-center bg-white">
                        <div class="input-group">
                            <span class="input-group-text bg-white border-end-0">
                                <i class="bi bi-search"></i>
                            </span>
                            <input type="text" class="form-control border-start-0"
                                placeholder="Buscar lotes por nÃºmero de lote..." @oninput="(e) => FiltrarLotes(e)" />
                        </div>
                        <div class="container overflow-auto" style="max-height: 150px;">
                            @foreach (var lote in Lotes ?? Enumerable.Empty<LoteSimpleToInventoryDTO>())
                            {
                                <div class="d-flex justify-content-around align-items-center my-2 border rounded p-2">
                                    <input class="form-control text-center" style="max-width: 15%;" type="number" min="0"
                                        max="@lote.CantidadProductosDisponibles"
                                        value="@(CantidadesPorLote.ContainsKey(lote.Id) ? CantidadesPorLote[lote.Id] : 0)"
                                        @onchange="(e) => ActualizarCantidadLote(e, lote.Id)" />
                                    <div class="p-2 border rounded mx-2 d-flex justify-content-between gap-2"
                                        style="max-width: 60%;">
                                        <div class="d-flex align-items-center">
                                            <span class="fw-semibold fs-6">Lote: @lote.Nro_Lote</span>
                                        </div>
                                        <div class="d-flex align-items-center gap-2">
                                            <span class="fw-semibold" style="font-size: small;">Vence:</span>
                                            <span
                                                class="badge bg-primary">@lote.Fecha_Vencimiento.ToShortDateString()</span>
                                        </div>
                                    </div>
                                    <div
                                        class="d-flex justify-content-between align-items-center bg-info-subtle py-1 px-2 rounded gap-2">
                                        <span class="text-muted text-center" style="font-size: smaller;">Disponible: </span>
                                        <span
                                            class="text-muted text-center fw-bold fs-3">@lote.CantidadProductosDisponibles</span>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@code {
    [Parameter]
    public ProductoInfoToInventoryDTO? Product { get; set; } = new();
    [Parameter]
    public List<LoteSimpleToInventoryDTO>? Lotes { get; set; } = new();

    public Dictionary<int, int> CantidadesPorLote { get; set; } = new();

    private void FiltrarLotes(ChangeEventArgs e)
    {
        var filtro = e.Value?.ToString()?.Trim().ToLower() ?? string.Empty;
        if (string.IsNullOrEmpty(filtro))
        {
            Lotes = new List<LoteSimpleToInventoryDTO>(Lotes!);
        }
        else
        {
            Lotes = Lotes!
            .Where(l => l.Nro_Lote!.ToLower().Contains(filtro))
            .ToList();
        }
    }

    private void ActualizarCantidadLote(ChangeEventArgs e, int loteId)
    {
        if (int.TryParse(e.Value?.ToString(), out int cantidad))
        {
            if (cantidad < 0)
            {
                cantidad = 0;
            }

            var lote = Lotes!.FirstOrDefault(l => l.Id == loteId);
            if (lote != null && cantidad > lote.CantidadProductosDisponibles)
            {
                cantidad = lote.CantidadProductosDisponibles;
            }

            CantidadesPorLote[loteId] = cantidad;
        }
        else
        {
            CantidadesPorLote[loteId] = 0;
        }
    }
}